/* 
 * WinJS Contrib v2.0.1.0
 * licensed under MIT license (see http://opensource.org/licenses/MIT)
 * sources available at https://github.com/gleborgne/winjscontrib
 */

var WinJSContrib=WinJSContrib||{};WinJSContrib.WinRT=WinJSContrib.WinRT||{},WinJSContrib.WinRT.Audio=WinJSContrib.WinRT.Audio||{},function(){"use strict";WinJSContrib.WinRT.Audio.RecorderState=WinJS.Binding.define({isRecording:!1,ellapsedTime:0,startedAt:null}),WinJSContrib.WinRT.Audio.Recorder=WinJS.Class.mix(WinJS.Class.define(function(){this.state=new WinJSContrib.WinRT.Audio.RecorderState,this.state.isRecording=!1},{start:function(e,i){var r=this,n=!1;return r.state.ellapsedTime=0,r.state.startedAt=new Date,r.state.isRecording=!0,i=i||{},r.recording={file:e,captureInitSettings:new Windows.Media.Capture.MediaCaptureInitializationSettings,encodingProfile:Windows.Media.MediaProperties.MediaEncodingProfile.createM4a(i.quality||Windows.Media.MediaProperties.AudioEncodingQuality.low),mediaCaptureMgr:new Windows.Media.Capture.MediaCapture,eventTracker:new WinJSContrib.UI.EventTracker,dispose:function(){this.eventTracker.dispose()}},r.recording.captureInitSettings.audioDeviceId=i.deviceId||"",r.recording.captureInitSettings.videoDeviceId="",r.recording.captureInitSettings.mediaCategory=Windows.Media.Capture.MediaCategory.other,r.recording.captureInitSettings.audioProcessing=n&&i.rawAudio?Windows.Media.AudioProcessing.raw:Windows.Media.AudioProcessing["default"],r.recording.captureInitSettings.streamingCaptureMode=Windows.Media.Capture.StreamingCaptureMode.audio,r.recording.eventTracker.addEvent(r.recording.mediaCaptureMgr,"failed",r._errorHandler.bind(r)),r.recording.eventTracker.addEvent(r.recording.mediaCaptureMgr,"recordlimitationexceeded",r._errorHandler.bind(r)),r.recording.mediaCaptureMgr.initializeAsync(r.recording.captureInitSettings).then(function(){return r.ellapsedTimeInterval=setInterval(function(){var e=(new Date-r.state.startedAt)/1e3;r.state.ellapsedTime=e},1e3),r.recording.mediaCaptureMgr.startRecordToStorageFileAsync(r.recording.encodingProfile,e).then(function(){return e},function(e){r._errorHandler(e)})},r._errorHandler.bind(r))},_errorHandler:function(e){var i=this;i.recording.dispose(),i._oldRecording=i.recording,i.recording=null,i.state.isRecording=!1,i.dispatchEvent("recordingstopped"),i.dispatchEvent("error",e),clearInterval(i.ellapsedTimeInterval)},stop:function(){var e=this;if(e.state.isRecording=!1,clearInterval(e.ellapsedTimeInterval),e.recording){var i=e.recording;return e._oldRecording=i,e.recording=null,i.mediaCaptureMgr.stopRecordAsync().then(function(){return i.dispose(),e.dispatchEvent("recordingstopped"),i.file})}return WinJS.Promise.wrap()}}),WinJS.Utilities.eventMixin),WinJSContrib.WinRT.Audio.Recorder.getMicrophones=function(){var e=Windows.Devices.Enumeration.DeviceInformation;return e.findAllAsync(Windows.Media.Devices.MediaDevice.getAudioCaptureSelector(),null).then(function(e){var i=[];if(e&&e.length>0)for(var r=0;r<e.length;r++)i.push(e[r]);return i},function(){return[]})}}();