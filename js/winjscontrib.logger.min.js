var WinJSContrib=WinJSContrib||{};WinJSContrib.Logger=function(){"use strict";var o=function(o){this.config=o||n,this.initWinJSLog()};o.prototype.Levels={off:0,error:1,warn:2,info:4,debug:8,all:15};var e=o.prototype.Levels,n={level:e.all,displayLevelInMessage:!1,displayGroupInMessage:!0,plugToWinJSLog:!1};Object.defineProperty(o.prototype,"Config",{get:function(){return this.config},set:function(o){o=o||{},"number"==typeof o.level&&(this.config.level=o.level),"boolean"==typeof o.displayLevelInMessage&&(this.config.displayLevelInMessage=o.displayLevelInMessage),"boolean"==typeof o.displayGroupInMessage&&(this.config.displayGroupInMessage=o.displayGroupInMessage),"boolean"==typeof o.plugToWinJSLog&&(this.config.plugToWinJSLog=o.plugToWinJSLog),this.initWinJSLog()}}),o.prototype.log=function(o,n,t){if("string"==typeof t&&(t=this.loggingLevelStringToEnum(t)),("undefined"==typeof t||null===t)&&(t=e.debug),this.config.level!==e.none&&(t&this.config.level)===t){var r=this.loggingLevelToMethod(t),i="";this.config.displayLevelInMessage&&(i+=this.logginLevelToString(t)+" - "),this.config.displayGroupInMessage&&n&&(i+=n+": "),i+=o,r(i)}},o.prototype.debug=function(o,n){this.log(o,n,e.debug)},o.prototype.info=function(o,n){this.log(o,n,e.info)},o.prototype.warn=function(o,n){this.log(o,n,e.warn)},o.prototype.error=function(o,n){this.log(o,n,e.error)},o.prototype.group=function(o){console&&console.group&&console.group(o)},o.prototype.groupCollapsed=function(o){console&&console.groupCollapsed&&console.groupCollapsed(o)},o.prototype.groupEnd=function(){console&&console.groupEnd&&console.groupEnd()},o.prototype.initWinJSLog=function(){WinJS.log=this.config.plugToWinJSLog?Logger.log:null},o.prototype.loggingLevelStringToEnum=function(o){switch(o.toLowerCase()){default:case"log":case"debug":return e.debug;case"info":return e.info;case"warn":return e.warn;case"error":return e.error}},o.prototype.logginLevelToString=function(o){switch(o){default:case e.debug:return"DEBUG";case e.info:return"INFO";case e.warn:return"WARN";case e.error:return"ERROR"}},o.prototype.loggingLevelToMethod=function(o){switch(o){case e.debug:return console.log.bind(console);case e.info:return console.info.bind(console);case e.warn:return console.warn.bind(console);case e.error:return console.error.bind(console);case e.all:throw"Logging level 'all' cannot be used to log a message.";case e.off:throw"Logging level 'none' cannot be used to log a message.";default:throw"Message logging level is incorrect."}},o.prototype.getLogger=function(e){var n=new o(JSON.parse(JSON.stringify(this.config)));return e&&(n.config.level=e),n};var t=new o(n);return t.LoggerClass=o,t}();