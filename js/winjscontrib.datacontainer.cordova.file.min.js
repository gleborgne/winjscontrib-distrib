/* 
 * WinJS Contrib v2.0.1.0
 * licensed under MIT license (see http://opensource.org/licenses/MIT)
 * sources available at https://github.com/gleborgne/winjscontrib
 */

!function(){"use strict";function e(e){return encodeURIComponent(e)+".json"}WinJS.Namespace.define("WinJSContrib.DataContainer",{CordovaContainer:WinJS.Class.define(function(e,o,n){this.key=e||"mcndatacontainer",this.options=o,this.parent=n,this.storageKey=n?n.storageKey+"."+this.key:this.key;var t=this;this.folder,t.folderPromise=new WinJS.Promise(function(e,r){if(t.parent)console.log("trying to get the directory "+t.key+" from parent "+n.key),n.folderPromise.then(function(o){console.log("get the directory "+t.key+" from parent "+n.key),o.getDirectory(t.key,{create:!0},function(o){console.log("got the directory"),t.folder=o,e(t.folder)},function(e){console.log("I failed at getting a directory"),r(e)})},function(e){console.log("I failed at getting a directory "+t.key+"from parent "+n.key),r(e)});else{if(!window.requestFileSystem)throw"File plugin is required !";window.requestFileSystem(LocalFileSystem.PERSISTENT,0,function(n){var i=n.root;console.log("getting directory "+t.key);var c=t.key;o.packageId&&window&&window.cordova&&"ios"!=window.cordova.platformId&&(c="Android/data/"+o.packageId+"/files/"+c),window&&window.cordova&&"ios"==window.cordova.platformId?c=t.key:console.error("WARNING !!!! you have to provide the packageId"),i.getDirectory(c,{create:!0},function(o){console.log("got the directory "+t.key),t.folder=o,e(t.folder)},function(e){console.log("(0) I failed at getting a directory "+t.key),r(e)})},function(e){console.log("(1) I failed at getting a directory "+t.key),r(e)})}})},{read:function(o){var n=this;return console.log("trying to read "+o),new WinJS.Promise(function(t,r){console.log("get container folder promise for "+o),n.folderPromise.then(function(n){console.log("got container folder promise for "+o),console.log("trying to read file "+o),n.getFile(e(o),{create:!0,exclusive:!1},function(e){console.log("read file "+o),e.file(function(e){var o=new FileReader;o.onloadend=function(e){try{t(e.target&&e.target.result?JSON.parse(e.target.result):"")}catch(o){console.log("error read file"),r()}},o.readAsText(e),o.onerror=function(){console.log("error read file"),r()}})},function(){console.log("error read file"),r()})},function(){console.log("error folder promise"),r()})})},save:function(o,n){var t=this;return new WinJS.Promise(function(r,i){if(n){var c=JSON.stringify(n);t.folderPromise.then(function(n){n.getFile(e(o),{create:!0,exclusive:!1},function(e){e.createWriter(function(e){e.write(c),e.onwriteend=r},function(e){i(e)})},function(e){i(e)})})}})},remove:function(o){var n=this;return new WinJS.Promise(function(t,r){n.folderPromise.then(function(n){n.getFile(e(o),{create:!0,exclusive:!1},function(e){e.remove(function(){console.log("file removed :"+o),t()},function(){console.log("faild to remove "+o)})},function(){r()})})})},list:function(){var e=this;return new WinJS.Promise(function(o){e.folderPromise.then(function(e){var n=e.createReader();n.readEntries(function(e){for(var n=[],t=0;t<e.length;t++)n.push({displayName:e[t].name.substring(0,e[t].name.length-5)});o(n)},function(){o([])})})})},child:function(e){if(this[e])return this[e];console.log("getting child");var o=new WinJSContrib.DataContainer.CordovaContainer(e,this.options,this);return this[e]=o,o}})})}();